[{"/Users/marksun/Documents/education/react/notes-app/src/index.js":"1","/Users/marksun/Documents/education/react/notes-app/src/App.js":"2","/Users/marksun/Documents/education/react/notes-app/src/components/NotesList.js":"3","/Users/marksun/Documents/education/react/notes-app/src/components/AddNote.js":"4","/Users/marksun/Documents/education/react/notes-app/src/components/Note.js":"5","/Users/marksun/Documents/education/react/notes-app/src/components/EditNote.js":"6"},{"size":241,"mtime":1611415455929,"results":"7","hashOfConfig":"8"},{"size":2040,"mtime":1611417850298,"results":"9","hashOfConfig":"8"},{"size":381,"mtime":1611412134150,"results":"10","hashOfConfig":"8"},{"size":514,"mtime":1611408351126,"results":"11","hashOfConfig":"8"},{"size":227,"mtime":1611417383018,"results":"12","hashOfConfig":"8"},{"size":1020,"mtime":1611417895869,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"101vxyd",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/marksun/Documents/education/react/notes-app/src/index.js",[],["29","30"],"/Users/marksun/Documents/education/react/notes-app/src/App.js",["31","32"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport uuid from \"react-uuid\";\nimport { Switch, Route } from \"react-router-dom\";\nimport NotesList from \"./components/NotesList\";\nimport AddNote from \"./components/AddNote\";\nimport EditNote from \"./components/EditNote\";\n\nconst App = () => {\n  const [list, setList] = useState([]);\n  const [currentNoteId, setCurrentNoteId] = useState(0);\n  const [hasInitialLoad, setHasInitialLoad] = useState(false);\n\n  // Load data once from disk on initial load\n  useEffect(() => {\n    const fetchNotes = async () => {\n      const { data } = await axios.get(\"http://localhost:8000/notes\");\n\n      setHasInitialLoad(true);\n\n      setList(data.notes);\n    };\n    fetchNotes();\n  }, []);\n\n  // Whenever our list changes, we want to save the updates to\n  // our file in disk\n  useEffect(() => {\n    const saveNotes = async () => {\n      await axios.post(\"http://localhost:8000/notes\", {\n        notes: list,\n      });\n    };\n    // prevent our initial save from overwriting our file\n    if (hasInitialLoad) {\n      saveNotes();\n    }\n  }, [list]);\n\n  const onAddNote = (newNote) => {\n    setList([...list, { id: uuid(), text: newNote }]);\n  };\n\n  const onEditNote = (noteId) => {\n    setCurrentNoteId(noteId);\n  };\n\n  const onNoteSave = (id, newText) => {\n    console.log(list);\n    console.log(newText);\n\n    const listCopy = [...list];\n    // find the note object with the matchingId and update its text\n    for (let element of listCopy) {\n      if (element.id === id) {\n        element.text = newText;\n      }\n    }\n\n    console.log(\"new listCopy is\");\n    console.log(listCopy);\n\n    setList(listCopy);\n  };\n\n  return (\n    <div>\n      <h1>Notes App</h1>\n      <Switch>\n        <Route path=\"/:id\">\n          <EditNote list={list} onNoteSave={onNoteSave} />\n        </Route>\n        <Route path=\"/\">\n          <NotesList list={list} onEditNote={onEditNote} />\n          <AddNote onAddNote={onAddNote} />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/marksun/Documents/education/react/notes-app/src/components/NotesList.js",[],"/Users/marksun/Documents/education/react/notes-app/src/components/AddNote.js",[],"/Users/marksun/Documents/education/react/notes-app/src/components/Note.js",[],["33","34"],"/Users/marksun/Documents/education/react/notes-app/src/components/EditNote.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":11,"column":10,"nodeType":"41","messageId":"42","endLine":11,"endColumn":23},{"ruleId":"43","severity":1,"message":"44","line":38,"column":6,"nodeType":"45","endLine":38,"endColumn":12,"suggestions":"46"},{"ruleId":"35","replacedBy":"47"},{"ruleId":"37","replacedBy":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'currentNoteId' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'hasInitialLoad'. Either include it or remove the dependency array.","ArrayExpression",["51"],["49"],["50"],"no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Update the dependencies array to be: [hasInitialLoad, list]",{"range":"54","text":"55"},[1099,1105],"[hasInitialLoad, list]"]